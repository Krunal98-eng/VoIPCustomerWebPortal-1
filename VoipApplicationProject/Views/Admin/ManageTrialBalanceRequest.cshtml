@model VoipApplicationProject.Models.TrialBalanceRequestModel

@{
    ViewData["Title"] = "ManageTrialBalanceRequest";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<div style="font-size:20px">Total Trial Balance Request : @Model.data.Count()</div>

<table id="TBRTable" class="table table-bordered text-center w-100">
    <thead>
        <tr>
            <th>Sr. No</th>
            <th>Date <a href="#" data-toggle="modal" data-target="#dateModal"><i class="fas fa-filter text-dark"></i></a></th>
            <th>Transaction Type</th>
            <th>Time</th>
            <th>Email</th>
            <th>Organisation</th>
            <th>Role <a href="#" data-toggle="modal" data-target="#roleModal"><i class="fas fa-filter text-dark"></i></a></th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @{int i = 1; }
        @foreach (var item in Model.data)
        {
            <tr>
                <td>@Html.DisplayName((i++).ToString())</td>
                <td>@Html.Label(item.Date.ToShortDateString())</td>
                <td>@Html.DisplayFor(modelItem => item.TransactionType)</td>
                <td>@Html.Label(item.Date.ToShortTimeString())</td>
                <td>@Html.DisplayFor(modelItem => item.Email)</td>
                <td>@Html.DisplayFor(modelItem => item.OrganisationName)</td>
                <td>@Html.DisplayFor(modelItem => item.CustomerTypeId)</td>
                <td>
                    @Html.ActionLink("Approve", "Approve", new { /* id=item.PrimaryKey */ }) |
                    @Html.ActionLink("Reject", "Reject", new { /* id=item.PrimaryKey */ })
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Date Filter Modal -->
<div class="modal fade" id="dateModal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h6>Filter Dates</h6>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form asp-action="ManageTrialBalanceRequest">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <span id="DateErrMsg" style="display:none" class="text-danger">Invalid Dates!</span>
                    <span asp-validation-for="FromDate" class="text-danger"></span>
                    <span asp-validation-for="ToDate" class="text-danger"></span>
                    <div class="row">
                        <div class="col-md-5">
                            From <input id="TxtFrmDate" asp-for="FromDate" class="form-control date-format" placeholder="dd/mm/yyyy" autocomplete="off" />
                        </div>
                        <div class="col-md-5">
                            To <input id="TxtToDate" asp-for="ToDate" class="form-control date-format" placeholder="dd/mm/yyyy" autocomplete="off" />
                        </div>
                        <div class="col-md-2 pt-4">
                            <input type="submit" value="Filter" class="btn btn-dark" />
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Role Filter Modal -->
<div class="modal fade" id="roleModal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h6>Filter Dates</h6>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form asp-action="ManageTrialBalanceRequest">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input asp-for="IsRole" class="d-none" value="true" />
                    <div class="row">
                        <div class="col-md-6">
                            <select class="form-control" asp-for="CustomerTypeId" asp-items="Html.GetEnumSelectList<CustomerType>()">
                            </select>
                        </div>
                        <div class="col-md-6">
                            <input type="submit" value="Filter" class="btn btn-dark" />
                            @*@Html.ActionLink("Filter", "ManageTrialBalanceRequest", new { @class = "btn btn-dark" })*@
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    $('#TBRTable').DataTable();

    var today = new Date();
    var tomorrow = new Date();
    tomorrow.setDate(today.getDate() - 1);

    $('#TxtFrmDate').datepicker({
        uiLibrary: 'bootstrap4',
        maxDate: tomorrow,
        format: "dd/mm/yyyy"
    });

    $('#TxtToDate').datepicker({
        uiLibrary: 'bootstrap4',
        maxDate: tomorrow,
        format: "dd/mm/yyyy"
    });

    var isShift = false;
    var seperator = "/";
    window.onload = function () {
        var inputs = document.getElementsByTagName("input");

        for (var i = 0; i < inputs.length; i++) {
            if (inputs[i].type == "text") {
                if (inputs[i].className.indexOf("date-format") != 1) {
                    inputs[i].setAttribute("maxlength", 10);
                    inputs[i].onkeydown = function (e) {
                        return IsNumeric(this, e.keyCode);
                    };
                    inputs[i].onkeyup = function (e) {
                        if (ValidateDateFormat(this, e.keyCode)) {
                            $("#DateErrMsg").css("display", "none");
                        }
                        else {
                            $("#DateErrMsg").css("display", "block");
                        }
                    };
                }
            }
        }
    };

    function IsNumeric(input, keyCode) {
        if (keyCode == 16) {
            isShift = true;
        }
        //Allow only Numeric Keys.
        if (((keyCode >= 48 && keyCode <= 57) || keyCode == 8 || keyCode <= 37 || keyCode <= 39 || (keyCode >= 96 && keyCode <= 105)) && isShift == false) {
            if ((input.value.length == 2 || input.value.length == 5) && keyCode != 8) {
                input.value += seperator;
            }

            return true;
        }
        else {
            return false;
        }
    };

    function ValidateDateFormat(input, keyCode) {
        var dateString = input.value;
        if (keyCode == 16) {
            isShift = false;
        }
        var regex = /(((0|1)[0-9]|2[0-9]|3[0-1])\/(0[1-9]|1[0-2])\/((19|20)\d\d))$/;

        //Check whether valid dd/MM/yyyy Date Format.
        if (regex.test(dateString) || dateString.length == 0) {
            return true;
        } else {
            return false;
        }
    };
</script>
